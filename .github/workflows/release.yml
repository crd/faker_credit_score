name: Release

on:
  push:
    tags:
      - 'v*.*.*'       # e.g., v0.5.1
      - 'v*.*.*rc*'    # e.g., v0.6.0rc1
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write   # needed for sync-develop to open/manage PRs

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # hatch-vcs needs tags

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Sync deps (creates .venv, installs project + dev group)
        run: uv sync

      - name: Run tests
        run: uv run pytest -q

  publish-testpypi:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'   # stable builder

      - name: Install uv
        run: pip install uv

      - name: Build artifacts
        run: uv build --sdist --wheel

      - name: Publish to TestPyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: uv publish --index testpypi --token "$UV_PUBLISH_TOKEN"

  promote-pypi:
    needs: publish-testpypi
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: pypi   # protect with required reviewers in repo Settings → Environments
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Build artifacts (repeat for safety)
        run: uv build --sdist --wheel

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: uv publish --token "$UV_PUBLISH_TOKEN"

  sync-develop:
    name: Open PR to sync master → develop
    needs: promote-pypi           # run after a successful release (both TestPyPI + gated PyPI)
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Create/Reuse PR master → develop
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Check if a PR from master -> develop already exists and is open.
            const { data: prs } = await github.pulls.list({
              owner, repo, state: 'open', base: 'develop', head: `${owner}:master`
            });

            if (prs.length > 0) {
              core.info(`An open PR from master -> develop already exists (#${prs[0].number}). Nothing to do.`);
              return;
            }

            // Create a PR from master into develop
            const title = `merge: back-merge release ${tag} from master into develop`;
            const body = [
              `Automated PR opened after tag \`${tag}\` was released.`,
              ``,
              `Purpose: keep \`develop\` aligned with \`master\` after a release or hotfix.`,
              ``,
              `- If conflicts exist, resolve in this PR.`,
              `- Merge once green.`
            ].join('\n');

            const { data: pr } = await github.pulls.create({
              owner, repo,
              title, head: 'master', base: 'develop', body,
              maintainer_can_modify: true, draft: false
            });

            core.info(`Opened PR #${pr.number} to sync master -> develop`);
